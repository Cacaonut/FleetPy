# Parameters from the Machado-Leon paper
mulog = -0.69
sdlog = 1.14
mean = exp(mulog + sdlog^2/2)
variance = (exp(sdlog^2) - 1) * exp(2 * mulog + sdlog^2)
# df with results
df = data.frame(mulog = numeric(0), sdlog = numeric(0), var_mulog = numeric(0), var_sdlog = numeric(0))
## factor_sdlog = 0.9
factor_sdlog = 0.9
var_mulog = 0
var_sdlog = -0.1 # -10%
sdlog_new = sqrt(log(((variance*factor_sdlog)/exp(2*log(mean)))+1))
# Parameters from the Machado-Leon paper
mulog = -0.69
sdlog = 1.14
mean = exp(mulog + sdlog^2/2)
variance = (exp(sdlog^2) - 1) * exp(2 * mulog + sdlog^2)
# df with results
df = data.frame(mulog = numeric(0), sdlog = numeric(0), var_mulog = numeric(0), var_sdlog = numeric(0))
## factor_sdlog = 0.9
factor_sdlog = 0.9
var_mulog = 0
var_sdlog = -0.1 # -10%
sdlog_new = sqrt(log(((variance*factor_sdlog)/exp(2*log(mean)))+1))
mulog_new = log(mean) - sdlog_new^2/2
mean_new = exp(mulog_new + sdlog_new^2/2)
variance_new = (exp(sdlog_new^2) - 1) * exp(2 * mulog_new + sdlog_new^2)
factor_sd_log_check = variance_new/variance
df = rbind(df, data.frame(mulog = mulog_new, sdlog = sdlog_new, var_mulog = var_mulog, var_sdlog = var_sdlog))
## factor_sdlog = 0.8
factor_sdlog = 0.8
var_mulog = 0
var_sdlog = -0.2 # -20%
sdlog_new = sqrt(log(((variance*factor_sdlog)/exp(2*log(mean)))+1))
mulog_new = log(mean) - sdlog_new^2/2
mean_new = exp(mulog_new + sdlog_new^2/2)
variance_new = (exp(sdlog_new^2) - 1) * exp(2 * mulog_new + sdlog_new^2)
factor_sd_log_check = variance_new/variance
df = rbind(df, data.frame(mulog = mulog_new, sdlog = sdlog_new, var_mulog = var_mulog, var_sdlog = var_sdlog))
## factor_sdlog = 0.7
factor_sdlog = 0.7
var_mulog = 0
var_sdlog = -0.3 # -30%
sdlog_new = sqrt(log(((variance*factor_sdlog)/exp(2*log(mean)))+1))
mulog_new = log(mean) - sdlog_new^2/2
mean_new = exp(mulog_new + sdlog_new^2/2)
variance_new = (exp(sdlog_new^2) - 1) * exp(2 * mulog_new + sdlog_new^2)
factor_sd_log_check = variance_new/variance
df = rbind(df, data.frame(mulog = mulog_new, sdlog = sdlog_new, var_mulog = var_mulog, var_sdlog = var_sdlog))
## factor_sdlog = 1.1
factor_sdlog = 1.1
var_mulog = 0
var_sdlog = 0.1 # 10%
sdlog_new = sqrt(log(((variance*factor_sdlog)/exp(2*log(mean)))+1))
mulog_new = log(mean) - sdlog_new^2/2
mean_new = exp(mulog_new + sdlog_new^2/2)
variance_new = (exp(sdlog_new^2) - 1) * exp(2 * mulog_new + sdlog_new^2)
factor_sd_log_check = variance_new/variance
df = rbind(df, data.frame(mulog = mulog_new, sdlog = sdlog_new, var_mulog = var_mulog, var_sdlog = var_sdlog))
## factor_sdlog = 1.2
factor_sdlog = 1.2
var_mulog = 0
var_sdlog = 0.2 # 20%
sdlog_new = sqrt(log(((variance*factor_sdlog)/exp(2*log(mean)))+1))
mulog_new = log(mean) - sdlog_new^2/2
mean_new = exp(mulog_new + sdlog_new^2/2)
variance_new = (exp(sdlog_new^2) - 1) * exp(2 * mulog_new + sdlog_new^2)
factor_sd_log_check = variance_new/variance
df = rbind(df, data.frame(mulog = mulog_new, sdlog = sdlog_new, var_mulog = var_mulog, var_sdlog = var_sdlog))
## factor_sdlog = 1.3
factor_sdlog = 1.3
var_mulog = 0
var_sdlog = 0.3 # 30%
sdlog_new = sqrt(log(((variance*factor_sdlog)/exp(2*log(mean)))+1))
mulog_new = log(mean) - sdlog_new^2/2
mean_new = exp(mulog_new + sdlog_new^2/2)
variance_new = (exp(sdlog_new^2) - 1) * exp(2 * mulog_new + sdlog_new^2)
factor_sd_log_check = variance_new/variance
df = rbind(df, data.frame(mulog = mulog_new, sdlog = sdlog_new, var_mulog = var_mulog, var_sdlog = var_sdlog))
# Second approach --------------------------------------------------------------------------
## Mean is is modified by a factor factor_mulog fixed and variance is fixed
## factor_mulog = 0.9
factor_mulog = 0.9
var_mulog = -0.1 # -10%
var_sdlog = 0
sdlog_new = sqrt(log(((variance)/exp(2*log(mean*factor_mulog)))+1))
mulog_new = log(mean*factor_mulog) - sdlog_new^2/2
mean_new = exp(mulog_new + sdlog_new^2/2)
variance_new = (exp(sdlog_new^2) - 1) * exp(2 * mulog_new + sdlog_new^2)
factor_mulog_check = mean_new/mean
df = rbind(df, data.frame(mulog = mulog_new, sdlog = sdlog_new, var_mulog = var_mulog, var_sdlog = var_sdlog))
## factor_mulog = 0.8
factor_mulog = 0.8
var_mulog = -0.2 # -20%
var_sdlog = 0
sdlog_new = sqrt(log(((variance)/exp(2*log(mean*factor_mulog)))+1))
mulog_new = log(mean*factor_mulog) - sdlog_new^2/2
mean_new = exp(mulog_new + sdlog_new^2/2)
variance_new = (exp(sdlog_new^2) - 1) * exp(2 * mulog_new + sdlog_new^2)
factor_mulog_check = mean_new/mean
df = rbind(df, data.frame(mulog = mulog_new, sdlog = sdlog_new, var_mulog = var_mulog, var_sdlog = var_sdlog))
## factor_mulog = 0.7
factor_mulog = 0.7
var_mulog = -0.3 # -30%
var_sdlog = 0
sdlog_new = sqrt(log(((variance)/exp(2*log(mean*factor_mulog)))+1))
mulog_new = log(mean*factor_mulog) - sdlog_new^2/2
mean_new = exp(mulog_new + sdlog_new^2/2)
variance_new = (exp(sdlog_new^2) - 1) * exp(2 * mulog_new + sdlog_new^2)
factor_mulog_check = mean_new/mean
df = rbind(df, data.frame(mulog = mulog_new, sdlog = sdlog_new, var_mulog = var_mulog, var_sdlog = var_sdlog))
## factor_mulog = 1.1
factor_mulog = 1.1
var_mulog = +0.1 # 10%
var_sdlog = 0
sdlog_new = sqrt(log(((variance)/exp(2*log(mean*factor_mulog)))+1))
mulog_new = log(mean*factor_mulog) - sdlog_new^2/2
mean_new = exp(mulog_new + sdlog_new^2/2)
variance_new = (exp(sdlog_new^2) - 1) * exp(2 * mulog_new + sdlog_new^2)
factor_mulog_check = mean_new/mean
df = rbind(df, data.frame(mulog = mulog_new, sdlog = sdlog_new, var_mulog = var_mulog, var_sdlog = var_sdlog))
## factor_mulog = 1.2
factor_mulog = 1.2
var_mulog = +0.2 # 20%
var_sdlog = 0
sdlog_new = sqrt(log(((variance)/exp(2*log(mean*factor_mulog)))+1))
mulog_new = log(mean*factor_mulog) - sdlog_new^2/2
mean_new = exp(mulog_new + sdlog_new^2/2)
variance_new = (exp(sdlog_new^2) - 1) * exp(2 * mulog_new + sdlog_new^2)
factor_mulog_check = mean_new/mean
df = rbind(df, data.frame(mulog = mulog_new, sdlog = sdlog_new, var_mulog = var_mulog, var_sdlog = var_sdlog))
## factor_mulog = 1.3
factor_mulog = 1.3
var_mulog = +0.3 # 30%
var_sdlog = 0
sdlog_new = sqrt(log(((variance)/exp(2*log(mean*factor_mulog)))+1))
mulog_new = log(mean*factor_mulog) - sdlog_new^2/2
mean_new = exp(mulog_new + sdlog_new^2/2)
variance_new = (exp(sdlog_new^2) - 1) * exp(2 * mulog_new + sdlog_new^2)
factor_mulog_check = mean_new/mean
df = rbind(df, data.frame(mulog = mulog_new, sdlog = sdlog_new, var_mulog = var_mulog, var_sdlog = var_sdlog))
# First approach --------------------------------------------------------------------------
# Create a color gradient with black as the intermediate color
custom_palette_hot <- colorRampPalette(c("grey", "red"))
custom_palette_cold <- colorRampPalette(c("blue", "grey"))
# Generate 7 colors
# gradient_colors <- c(custom_palette_cold(4), custom_palette_hot(4)[2:4])
gradient_colors <- c(custom_palette_cold(4)[1:3], "#000000", custom_palette_hot(4)[2:4])
x = seq(0, 100, 0.01)
y = dlnorm(x, mean = mulog, sdlog = sdlog)
plot(x, y, type = "l", col = gradient_colors[4], ylab = "pdf",
main = "Log normal distribution with same mean and pivoting variance", xlim = c(0,3.5),
xlab = "PUDO Duration [min]", ylim = c(0,1.5), lwd = 1.8)
y = dlnorm(x, mean = df$mulog[1], sdlog = df$sdlog[1]) # -10% sdlog
lines(x, y, col = gradient_colors[3], lwd = 1.8)
y = dlnorm(x, mean = df$mulog[2], sdlog = df$sdlog[2]) # -20% sdlog
lines(x, y, col =  gradient_colors[2], lwd = 1.8)
y = dlnorm(x, mean = df$mulog[3], sdlog = df$sdlog[3]) # -30% sdlog
lines(x, y, col =  gradient_colors[1], lwd = 1.8)
y = dlnorm(x, mean = df$mulog[4], sdlog = df$sdlog[4])
lines(x, y, col =  gradient_colors[5], lwd = 1.8)
y = dlnorm(x, mean = df$mulog[5], sdlog = df$sdlog[5])
lines(x, y, col =  gradient_colors[6], lwd = 1.8)
y = dlnorm(x, mean = df$mulog[6], sdlog = df$sdlog[6])
lines(x, y, col =  gradient_colors[7], lwd = 1.8)
legend("topright",
legend = c(expression(sigma^2 == paste("-", 30, "%")),
expression(sigma^2 == paste("-", 20, "%")),
expression(sigma^2 == paste("-", 10, "%")),
"Base level   ",
expression(sigma^2 == paste("+", 10, "%")),
expression(sigma^2 == paste("+", 20, "%")),
expression(sigma^2 == paste("+", 30, "%"))),
col = c(gradient_colors[1], gradient_colors[2], gradient_colors[3],
"black",
gradient_colors[5], gradient_colors[6], gradient_colors[7]),
lty = 1, cex = 0.8, lwd = 2)
# Create a color gradient with black as the intermediate color
custom_palette_hot <- colorRampPalette(c("grey", "red"))
custom_palette_cold <- colorRampPalette(c("blue", "grey"))
# Generate 7 colors
# gradient_colors <- c(custom_palette_cold(4), custom_palette_hot(4)[2:4])
gradient_colors <- c(custom_palette_cold(4)[1:3], "#000000", custom_palette_hot(4)[2:4])
x = seq(0, 100, 0.01)
y = dlnorm(x, mean = mulog, sdlog = sdlog)
plot(x, y, type = "l", col = gradient_colors[4],
xlab = "PUDO Duration [min]", ylab = "pdf",
main = "Log normal distribution with pivoting mean and same variance", xlim = c(0,3.5),
ylim = c(0,3), lwd = 1.8)
y = dlnorm(x, mean = df$mulog[7], sdlog = df$sdlog[7])
lines(x, y, col = gradient_colors[3], lwd = 1.8)
y = dlnorm(x, mean = df$mulog[8], sdlog = df$sdlog[8])
lines(x, y, col =  gradient_colors[2], lwd = 1.8)
y = dlnorm(x, mean = df$mulog[9], sdlog = df$sdlog[9])
lines(x, y, col =  gradient_colors[1], lwd = 1.8)
y = dlnorm(x, mean = df$mulog[10], sdlog = df$sdlog[10])
lines(x, y, col =  gradient_colors[5], lwd = 1.8)
y = dlnorm(x, mean = df$mulog[11], sdlog = df$sdlog[11])
lines(x, y, col =  gradient_colors[6], lwd = 1.8)
y = dlnorm(x, mean = df$mulog[12], sdlog = df$sdlog[12])
lines(x, y, col =  gradient_colors[7], lwd = 1.8)
legend("topright",
legend = c(expression(mu == paste("-", 30, "%")),
expression(mu == paste("-", 20, "%")),
expression(mu == paste("-", 10, "%")),
"Base level   ",
expression(mu == paste("+", 10, "%")),
expression(mu == paste("+", 20, "%")),
expression(mu == paste("+", 30, "%"))),
col = c(gradient_colors[1], gradient_colors[2], gradient_colors[3],
"black",
gradient_colors[5], gradient_colors[6], gradient_colors[7]),
lty = 1, cex = 0.8, lwd = 2)
